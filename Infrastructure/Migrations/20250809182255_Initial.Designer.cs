// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20250809182255_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("ProfessorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "MAT101",
                            Credits = 3,
                            Name = "Matemáticas I",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "PRO101",
                            Credits = 4,
                            Name = "Programación I",
                            ProfessorId = 2
                        },
                        new
                        {
                            Id = 3,
                            Code = "ING101",
                            Credits = 2,
                            Name = "Inglés I",
                            ProfessorId = 3
                        },
                        new
                        {
                            Id = 4,
                            Code = "HIS101",
                            Credits = 2,
                            Name = "Historia",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 5,
                            Code = "FIS101",
                            Credits = 3,
                            Name = "Física",
                            ProfessorId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnrolledAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("Domain.Entities.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EnrollmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GradedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EnrollmentId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Domain.Entities.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Document = "PRF001",
                            Email = "prof1@school.test",
                            FullName = "Profesor 1"
                        },
                        new
                        {
                            Id = 2,
                            Document = "PRF002",
                            Email = "prof2@school.test",
                            FullName = "Profesor 2"
                        },
                        new
                        {
                            Id = 3,
                            Document = "PRF003",
                            Email = "prof3@school.test",
                            FullName = "Profesor 3"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdentificationNumber")
                        .IsUnique();

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2000, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre1",
                            IdentificationNumber = "STU000001",
                            LastName = "Apellido1"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2000, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre2",
                            IdentificationNumber = "STU000002",
                            LastName = "Apellido2"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2000, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre3",
                            IdentificationNumber = "STU000003",
                            LastName = "Apellido3"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2000, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre4",
                            IdentificationNumber = "STU000004",
                            LastName = "Apellido4"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2000, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre5",
                            IdentificationNumber = "STU000005",
                            LastName = "Apellido5"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2000, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre6",
                            IdentificationNumber = "STU000006",
                            LastName = "Apellido6"
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(2000, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre7",
                            IdentificationNumber = "STU000007",
                            LastName = "Apellido7"
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(2000, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre8",
                            IdentificationNumber = "STU000008",
                            LastName = "Apellido8"
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(2000, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre9",
                            IdentificationNumber = "STU000009",
                            LastName = "Apellido9"
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(2000, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre10",
                            IdentificationNumber = "STU000010",
                            LastName = "Apellido10"
                        },
                        new
                        {
                            Id = 11,
                            BirthDate = new DateTime(2000, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre11",
                            IdentificationNumber = "STU000011",
                            LastName = "Apellido11"
                        },
                        new
                        {
                            Id = 12,
                            BirthDate = new DateTime(2000, 12, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre12",
                            IdentificationNumber = "STU000012",
                            LastName = "Apellido12"
                        },
                        new
                        {
                            Id = 13,
                            BirthDate = new DateTime(2001, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre13",
                            IdentificationNumber = "STU000013",
                            LastName = "Apellido13"
                        },
                        new
                        {
                            Id = 14,
                            BirthDate = new DateTime(2001, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre14",
                            IdentificationNumber = "STU000014",
                            LastName = "Apellido14"
                        },
                        new
                        {
                            Id = 15,
                            BirthDate = new DateTime(2001, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre15",
                            IdentificationNumber = "STU000015",
                            LastName = "Apellido15"
                        },
                        new
                        {
                            Id = 16,
                            BirthDate = new DateTime(2001, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre16",
                            IdentificationNumber = "STU000016",
                            LastName = "Apellido16"
                        },
                        new
                        {
                            Id = 17,
                            BirthDate = new DateTime(2001, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre17",
                            IdentificationNumber = "STU000017",
                            LastName = "Apellido17"
                        },
                        new
                        {
                            Id = 18,
                            BirthDate = new DateTime(2001, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre18",
                            IdentificationNumber = "STU000018",
                            LastName = "Apellido18"
                        },
                        new
                        {
                            Id = 19,
                            BirthDate = new DateTime(2001, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre19",
                            IdentificationNumber = "STU000019",
                            LastName = "Apellido19"
                        },
                        new
                        {
                            Id = 20,
                            BirthDate = new DateTime(2001, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre20",
                            IdentificationNumber = "STU000020",
                            LastName = "Apellido20"
                        },
                        new
                        {
                            Id = 21,
                            BirthDate = new DateTime(2001, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre21",
                            IdentificationNumber = "STU000021",
                            LastName = "Apellido21"
                        },
                        new
                        {
                            Id = 22,
                            BirthDate = new DateTime(2001, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre22",
                            IdentificationNumber = "STU000022",
                            LastName = "Apellido22"
                        },
                        new
                        {
                            Id = 23,
                            BirthDate = new DateTime(2001, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre23",
                            IdentificationNumber = "STU000023",
                            LastName = "Apellido23"
                        },
                        new
                        {
                            Id = 24,
                            BirthDate = new DateTime(2001, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre24",
                            IdentificationNumber = "STU000024",
                            LastName = "Apellido24"
                        },
                        new
                        {
                            Id = 25,
                            BirthDate = new DateTime(2002, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nombre25",
                            IdentificationNumber = "STU000025",
                            LastName = "Apellido25"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.HasOne("Domain.Entities.Professor", "Professor")
                        .WithMany("Courses")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Domain.Entities.Enrollment", b =>
                {
                    b.HasOne("Domain.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Domain.Entities.Grade", b =>
                {
                    b.HasOne("Domain.Entities.Enrollment", "Enrollment")
                        .WithMany("Grades")
                        .HasForeignKey("EnrollmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollment");
                });

            modelBuilder.Entity("Domain.Entities.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("Domain.Entities.Enrollment", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("Domain.Entities.Professor", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Domain.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
